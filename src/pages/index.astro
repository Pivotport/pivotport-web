---
import Layout from '../layouts/Layout.astro';
import { getCollection } from 'astro:content';

const latestArticles = await getCollection('articles', ({ data }) => {
  return true;
}).then(articles => articles.sort((a, b) => b.data.date.getTime() - a.data.date.getTime()));
---

<Layout title="Quantum & Cloud Engineering Division">
  <!-- Hero Section -->
  <section class="relative overflow-hidden">
    <!-- Video Background -->
    <div class="absolute inset-0 w-full h-full">
      <video
        autoplay
        loop
        muted
        playsinline
        class="w-full h-full object-cover"
        poster="https://cdn.pixabay.com/photo/2023/04/06/01/26/quantum-computing-7902360_1280.jpg"
      >
        <source
          src="https://cdn.pixabay.com/vimeo/536240089/quantum-71834.mp4?width=1280&hash=f4c4d5a5f7c4c4c4"
          type="video/mp4"
        />
        <source
          src="https://cdn.pixabay.com/vimeo/536240089/quantum-71834.webm?width=1280&hash=f4c4d5a5f7c4c4c4"
          type="video/webm"
        />
        Your browser does not support the video tag.
      </video>
      <!-- Overlay with animated gradient -->
      <div class="absolute inset-0 bg-gradient-to-b from-purple-900/90 to-indigo-900/90 animate-gradient"></div>
    </div>

    <!-- Content -->
    <div class="relative min-h-[80vh] flex items-center">
      <div class="container mx-auto px-4 py-20 text-center">
        <h1 class="text-5xl md:text-6xl font-bold text-white mb-6 animate-fade-in">
          Pivot Port
        </h1>
        <p class="text-2xl md:text-3xl text-white/90 mb-4 animate-fade-in-delay-1">
          Quantum & Cloud Engineering Excellence
        </p>
        <p class="text-xl text-white/80 max-w-3xl mx-auto mb-8 animate-fade-in-delay-2">
          Leading the future of computing with quantum technology and cloud solutions
        </p>
        <div class="flex justify-center gap-4 animate-fade-in-delay-3">
          <a
            href="/contact"
            class="bg-purple-600 text-white px-8 py-3 rounded-lg hover:bg-purple-700 transition-colors"
          >
            Get Started
          </a>
          <a
            href="/articles"
            class="bg-white/10 text-white px-8 py-3 rounded-lg hover:bg-white/20 transition-colors"
          >
            Learn More
          </a>
        </div>
      </div>
    </div>
  </section>

  <!-- Services Section -->
  <section class="py-16 bg-gray-50">
    <div class="container mx-auto px-4">
      <h2 class="text-3xl font-bold text-center mb-12">Our Services</h2>
      <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">
        <div class="bg-white p-6 rounded-lg shadow-md">
          <h3 class="text-xl font-semibold mb-4">Quantum Computing Strategy</h3>
          <p>Expert guidance in quantum computing implementation and strategy development</p>
        </div>
        <div class="bg-white p-6 rounded-lg shadow-md">
          <h3 class="text-xl font-semibold mb-4">Cloud Architecture</h3>
          <p>Comprehensive cloud solutions for Azure and AWS platforms</p>
        </div>
        <div class="bg-white p-6 rounded-lg shadow-md">
          <h3 class="text-xl font-semibold mb-4">Quantum Software Development</h3>
          <p>Custom quantum software solutions for various platforms</p>
        </div>
      </div>
    </div>
  </section>

  <!-- Latest Articles -->
  <section class="py-16 bg-gray-50">
    <div class="container mx-auto px-4">
      <div class="flex justify-between items-center mb-12">
        <h2 class="text-3xl font-bold">Latest Articles</h2>
        <div class="flex items-center gap-2">
          <button
            id="prev-button"
            class="p-2 rounded-full bg-white shadow-md hover:bg-purple-50 focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:opacity-50 disabled:cursor-not-allowed"
            aria-label="Previous articles"
            disabled
          >
            <svg class="w-6 h-6 text-gray-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7" />
            </svg>
          </button>
          <span id="pagination-info" class="text-gray-600 min-w-[80px] text-center">1 / 1</span>
          <button
            id="next-button"
            class="p-2 rounded-full bg-white shadow-md hover:bg-purple-50 focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:opacity-50 disabled:cursor-not-allowed"
            aria-label="Next articles"
          >
            <svg class="w-6 h-6 text-gray-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7" />
            </svg>
          </button>
        </div>
      </div>
        
      <!-- Articles Container -->
      <div class="relative overflow-hidden">
        <div 
          id="articles-container" 
          class="flex gap-8 transition-transform duration-500 ease-in-out"
          style="transform: translateX(0px);"
        >
          {latestArticles.map(article => (
            <article class="flex-none w-full md:w-[calc(50%-1rem)] lg:w-[calc(33.333%-1rem)] bg-white rounded-lg shadow-md overflow-hidden transform hover:scale-[1.02] transition-transform">
              <div class="p-6">
                <div class="flex items-center gap-2 text-sm text-purple-600 mb-2">
                  <span class="px-2 py-1 bg-purple-50 rounded-full">{article.data.category}</span>
                </div>
                <h3 class="text-xl font-semibold mb-2 line-clamp-2">
                  <a href={`/articles/${article.slug}`} class="hover:text-purple-600">
                    {article.data.title}
                  </a>
                </h3>
                <p class="text-gray-600 mb-4 line-clamp-3">{article.data.excerpt}</p>
                <div class="flex items-center justify-between">
                  <div class="flex items-center text-sm text-gray-500">
                    <img
                      src={article.data.author === 'Rajiv' ? '/rajiv-mistry.jpg' : '/rajiv-mistry.jpg'}
                      alt={article.data.author}
                      class="w-8 h-8 rounded-full mr-2 object-cover"
                    />
                    <span>{article.data.author}</span>
                    <span class="mx-2">•</span>
                    <span>{article.data.date.toLocaleDateString()}</span>
                  </div>
                  <a 
                    href={`/articles/${article.slug}`}
                    class="text-purple-600 hover:text-purple-800 font-medium"
                  >
                    Read More →
                  </a>
                </div>
              </div>
            </article>
          ))}
        </div>
      </div>

      <!-- Mobile Swipe Indicator -->
      <div class="mt-6 flex justify-center items-center gap-2 md:hidden">
        <svg class="w-5 h-5 text-gray-400 animate-pulse" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M7 16l-4-4m0 0l4-4m-4 4h18" />
        </svg>
        <span class="text-sm text-gray-500">Swipe to view more</span>
        <svg class="w-5 h-5 text-gray-400 animate-pulse" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 8l4 4m0 0l-4 4m4-4H3" />
        </svg>
      </div>
    </div>
  </section>
</Layout>

<script>
  let touchStartX = 0;
  let touchEndX = 0;
  let currentPage = 0;
  
  const container = document.getElementById('articles-container');
  const prevButton = document.getElementById('prev-button');
  const nextButton = document.getElementById('next-button');
  const paginationInfo = document.getElementById('pagination-info');
  
  if (container && prevButton && nextButton && paginationInfo) {
    // Calculate items per page based on screen width
    const getItemsPerPage = () => {
      const width = window.innerWidth;
      return width >= 1024 ? 3 : width >= 768 ? 2 : 1;
    };

    const updatePagination = () => {
      const itemsPerPage = getItemsPerPage();
      const totalPages = Math.ceil(container.children.length / itemsPerPage);
      paginationInfo.textContent = `${currentPage + 1} / ${totalPages}`;
      prevButton.disabled = currentPage === 0;
      nextButton.disabled = currentPage === totalPages - 1;
    };

    const scrollTo = (page) => {
      const itemsPerPage = getItemsPerPage();
      const totalPages = Math.ceil(container.children.length / itemsPerPage);
      currentPage = Math.max(0, Math.min(page, totalPages - 1));
      
      const itemWidth = container.children[0].offsetWidth;
      const offset = -(currentPage * itemWidth * itemsPerPage + currentPage * 32); // 32px is the gap
      container.style.transform = `translateX(${offset}px)`;
      updatePagination();
    };

    // Touch events for mobile swipe
    container.addEventListener('touchstart', (e) => {
      touchStartX = e.changedTouches[0].screenX;
    });

    container.addEventListener('touchend', (e) => {
      touchEndX = e.changedTouches[0].screenX;
      const diff = touchStartX - touchEndX;
      
      if (Math.abs(diff) > 50) { // Minimum swipe distance
        if (diff > 0) {
          scrollTo(currentPage + 1);
        } else {
          scrollTo(currentPage - 1);
        }
      }
    });

    // Button events
    prevButton.addEventListener('click', () => scrollTo(currentPage - 1));
    nextButton.addEventListener('click', () => scrollTo(currentPage + 1));

    // Initialize
    updatePagination();

    // Handle window resize
    let resizeTimeout;
    window.addEventListener('resize', () => {
      clearTimeout(resizeTimeout);
      resizeTimeout = setTimeout(() => {
        scrollTo(0); // Reset to first page on resize
        updatePagination();
      }, 200);
    });
  }
</script>

<style>
  @keyframes fadeIn {
    from {
      opacity: 0;
      transform: translateY(20px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  @keyframes gradientAnimation {
    0% {
      background-position: 0% 50%;
    }
    50% {
      background-position: 100% 50%;
    }
    100% {
      background-position: 0% 50%;
    }
  }

  .animate-gradient {
    background: linear-gradient(
      270deg,
      rgba(88, 28, 135, 0.9),
      rgba(49, 46, 129, 0.9),
      rgba(67, 20, 127, 0.9)
    );
    background-size: 200% 200%;
    animation: gradientAnimation 15s ease infinite;
  }

  .animate-fade-in {
    animation: fadeIn 0.8s ease-out forwards;
  }

  .animate-fade-in-delay-1 {
    animation: fadeIn 0.8s ease-out 0.2s forwards;
    opacity: 0;
  }

  .animate-fade-in-delay-2 {
    animation: fadeIn 0.8s ease-out 0.4s forwards;
    opacity: 0;
  }

  .animate-fade-in-delay-3 {
    animation: fadeIn 0.8s ease-out 0.6s forwards;
    opacity: 0;
  }
  
  /* Add smooth scrolling for touch devices */
  #articles-container {
    -webkit-overflow-scrolling: touch;
  }

  /* Add hover effects */
  article {
    backface-visibility: hidden;
  }

  @media (hover: hover) {
    article:hover {
      transform: translateY(-4px);
      box-shadow: 0 10px 20px rgba(0, 0, 0, 0.1);
    }
  }
</style>