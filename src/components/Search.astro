---
interface Props {
  placeholder?: string;
}

const { placeholder = "Search articles..." } = Astro.props;
---

<div class="relative w-full">
  <div class="relative">
    <input
      type="text"
      id="search-input"
      placeholder={placeholder}
      class="w-full px-4 py-2 rounded-lg bg-white/10 border border-white/20 text-white placeholder-white/70 focus:ring-2 focus:ring-purple-500 focus:border-transparent"
    />
    <div class="absolute right-3 top-1/2 -translate-y-1/2 text-white/70">
      <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z" />
      </svg>
    </div>
  </div>
  <div
    id="search-results"
    class="absolute z-50 w-full mt-2 bg-white rounded-lg shadow-lg hidden max-h-[80vh] overflow-y-auto"
  >
  </div>
</div>

<script>
  const searchInput = document.getElementById('search-input') as HTMLInputElement;
  const searchResults = document.getElementById('search-results');

  let articles = [];

  // Fetch articles data
  async function fetchArticles() {
    const response = await fetch('/api/search.json');
    articles = await response.json();
  }

  // Initialize search
  fetchArticles();

  function search(query: string) {
    if (!query) {
      searchResults.innerHTML = '';
      searchResults.classList.add('hidden');
      return;
    }

    const results = articles.filter(article => {
      const searchString = `${article.title} ${article.excerpt} ${article.category} ${article.author}`.toLowerCase();
      return searchString.includes(query.toLowerCase());
    });

    if (results.length === 0) {
      searchResults.innerHTML = `
        <div class="p-4 text-gray-500">
          No results found for "${query}"
        </div>
      `;
    } else {
      searchResults.innerHTML = results
        .map(
          article => `
            <a href="/articles/${article.slug}" class="block p-4 hover:bg-gray-50">
              <h3 class="font-semibold text-gray-900">${article.title}</h3>
              <p class="text-sm text-gray-600 mt-1">${article.excerpt || ''}</p>
              <div class="text-xs text-gray-500 mt-2">
                ${article.category} â€¢ ${new Date(article.date).toLocaleDateString()}
              </div>
            </a>
          `
        )
        .join('');
    }

    searchResults.classList.remove('hidden');
  }

  // Debounce function
  function debounce(func: Function, wait: number) {
    let timeout: number;
    return function executedFunction(...args: any[]) {
      const later = () => {
        clearTimeout(timeout);
        func(...args);
      };
      clearTimeout(timeout);
      timeout = setTimeout(later, wait);
    };
  }

  // Add event listeners
  searchInput.addEventListener('input', debounce((e: Event) => {
    const target = e.target as HTMLInputElement;
    search(target.value);
  }, 300));

  // Close search results when clicking outside
  document.addEventListener('click', (e: Event) => {
    if (!searchResults.contains(e.target as Node) && e.target !== searchInput) {
      searchResults.classList.add('hidden');
    }
  });
</script>